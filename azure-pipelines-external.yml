pool: '.Net Bubble - GCP'

variables:
  - group: sonar-dotnet-variables-external
  - group: sonarsource-build-variables
  - name: MsBuildPath
    value: 'C:\Program Files\Microsoft Visual Studio\2022\Preview\Msbuild\Current\Bin\msbuild.exe'
  - name: vsVersion
    value: '17.0'

stages:
- stage: buildAndTests
  displayName: Build
  jobs:
    - job: runUnitTestsJob
      displayName: 'Build and tests:'

      steps:
      - task: NuGetToolInstaller@1
        displayName: "Install NuGet"

      - powershell: |
          dotnet --list-sdks
          dotnet --version
        displayName: 'List dotnet versions and current version'

      - script: '"${{ variables.MsBuildPath }}" /t:restore /p:RestoreLockedMode=true /p:RestoreConfigFile="analyzers\NuGet.Config" $(solution)'
        displayName: "NuGet Restore"

      - powershell: |
          # Calculate the file path
          $versionFilePath = "$env:BUILD_SOURCESDIRECTORY\scripts\version\Version.props"
          Write-Host "Reading the Sonar project version from '${versionFilePath}' ..."

          # Read the version from the file
          [xml]$versionProps = Get-Content "$versionFilePath"
          $sonarProjectVersion = $versionProps.Project.PropertyGroup.MainVersion
          Write-Host "Sonar project version is '${sonarProjectVersion}'"

          # Set the variable to it can be used by other tasks
          Write-Host "##vso[task.setvariable variable=SONAR_PROJECT_VERSION;]$sonarProjectVersion"
        displayName: 'Read Sonar project version from the versions.props file'

      - task: VSBuild@1
        displayName: 'Set BranchName, Sha1 and BuildNumber properties from Azure pipeline variables'
        inputs:
          solution: scripts/version/ChangeVersion.proj
          msbuildArgs: '/p:Sha1=$(Build.SourceVersion) /p:BranchName=$(Build.SourceBranchName) /p:BuildNumber=$(Build.BuildId) /p:BuildConfiguration=$(BuildConfiguration)'
          vsVersion: $(vsVersion)

      - task: VSBuild@1
        displayName: 'Build SonarAnalyzer solution'
        inputs:
          solution: '$(solution)'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          msbuildArgs: '/p:DeployExtension=false /p:Sha1=$(Build.SourceVersion) /p:BuildNumber=$(Build.BuildId)'
          vsVersion: $(vsVersion)

      - task: VSTest@2
        displayName: ".NET UTs"
        inputs:
          testAssemblyVer2: |
            **\$(BuildConfiguration)\**\*.UnitTest.dll
            !**\obj\**
          runInParallel: true
          runTestsInIsolation: true
          codeCoverageEnabled: true
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          rerunFailedTests: false

      - task: PowerShell@2
        displayName: '.NET ITs'
        inputs:
          filePath: 'analyzers/its/regression-test.ps1'
          workingDirectory: 'analyzers/its'