/*
 * SonarAnalyzer for .NET
 * Copyright (C) 2015-2024 SonarSource SA
 * mailto: contact AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

using ITs.JsonParser.Json;

namespace ITs.JsonParser.Test;

[TestClass]
public class SarifReportTest
{
    [DataRow(1, 1, "file:///some/local/path/analyzers/its/path/file.cs", "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/path/file.cs#L1")]
    [DataRow(1, 5, "file:///some/local/path/analyzers/its/path/file.cs", "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/path/file.cs#L1-L5")]
    [DataRow(1, 1, "file:///temp/some/path/file.cs", "<autogenerated>/file.cs#L1")]
    [DataRow(1, 5, "file:///temp/some/path/file.cs", "<autogenerated>/file.cs#L1-L5")]
    [DataTestMethod]
    public void NormalizedUri(int startLine, int endLine, string inputUri, string normalizedUri)
    {
        var region = new SarifRegion()
        {
            StartLine = startLine,
            EndLine = endLine,
            StartColumn = 1,
            EndColumn = 2
        };

        var location = new SarifLocationFile
        {
            Region = region,
            Uri = inputUri
        };
        SarifIssue.NormalizedUri(location).Should().Be(normalizedUri);
    }
}
