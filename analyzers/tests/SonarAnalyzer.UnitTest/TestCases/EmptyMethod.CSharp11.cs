using System.Runtime.InteropServices;

interface IMyInterface
{
    static virtual void StaticVirtualMethod() // Compliant (empty virtual method)
    {

    }

    static abstract void StaticAbstractMethod();
}

class MyClass : IMyInterface
{
    public static void StaticVirtualMethod() { } // Noncompliant

    public static void StaticAbstractMethod() { } // Noncompliant FP
}

public unsafe partial class Externals
{
    [LibraryImport("ole32.dll")]
    private static partial void F();  // Compliant

    // Code usually generated by the source generator:
    [System.Runtime.InteropServices.DllImportAttribute("ole32.dll", EntryPoint = "F", ExactSpelling = true)]
    private static extern partial void F(); // Compliant
}

// https://github.com/SonarSource/sonar-dotnet/issues/7629
public class Repro_7629
{
    interface Interface_7629
    {
        void MyMethod();
        static abstract void MyStaticAbstractMethod();
    }

    class MyClass_7629 : Interface_7629
    {
        public void MyMethod() { } // Noncompliant FP
        public static void MyStaticAbstractMethod() { } // Noncompliant FP
    }
}
