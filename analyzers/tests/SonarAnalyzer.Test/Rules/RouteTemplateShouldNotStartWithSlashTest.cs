/*
 * SonarAnalyzer for .NET
 * Copyright (C) 2015-2024 SonarSource SA
 * mailto: contact AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

using CS = SonarAnalyzer.Rules.CSharp;
using VB = SonarAnalyzer.Rules.VisualBasic;

namespace SonarAnalyzer.Test.Rules;

[TestClass]
public class RouteTemplateShouldNotStartWithSlashTest
{
    private readonly VerifierBuilder builderCS = new VerifierBuilder<CS.RouteTemplateShouldNotStartWithSlash>();
    private readonly VerifierBuilder builderVB = new VerifierBuilder<VB.RouteTemplateShouldNotStartWithSlash>();

#if NETFRAMEWORK

    // ASP.NET 4x MVC 3 and 4 don't support attribute routing, nor MapControllerRoute and similar
    public static IEnumerable<object[]> AspNet4xMvcVersionsUnderTest => [["5.2.7"] /* Most used */, [Constants.NuGetLatestVersion]];

    private static IEnumerable<MetadataReference> AspNet4xReferences(string aspNetMvcVersion) =>
        MetadataReferenceFacade.SystemWeb
            .Concat(NuGetMetadataReference.MicrosoftAspNetMvc(aspNetMvcVersion));

    [TestMethod]
    [DynamicData(nameof(AspNet4xMvcVersionsUnderTest))]
    public void RouteTemplateShouldNotStartWithSlash_CS(string aspNetMvcVersion) =>
        builderCS
        .AddPaths("RouteTemplateShouldNotStartWithSlash.AspNet4x.cs")
        .AddReferences(AspNet4xReferences(aspNetMvcVersion))
        .Verify();

    [TestMethod]
    [DynamicData(nameof(AspNet4xMvcVersionsUnderTest))]
    public void RouteTemplateShouldNotStartWithSlash_VB(string aspNetMvcVersion) =>
        builderVB
        .AddPaths("RouteTemplateShouldNotStartWithSlash.vb")
        .AddReferences(AspNet4xReferences(aspNetMvcVersion))
        .Verify();

    [TestMethod]
    [DynamicData(nameof(AspNet4xMvcVersionsUnderTest))]
    public void RouteTemplateShouldNotStartWithSlash_DoesNotReportInAutoGeneratedCode_CS(string aspNetMvcVersion) =>
        builderCS
        .AddSnippet("""
            // <auto-generated/>
            using System.Web.Mvc;
            [Route("[controller]")]
            public class NoncompliantController : Controller // Compliant, we don't report in autogenerated controllers
            {
                [Route("/Index1")]
                public ActionResult Index1() => View();
            }
            """)
        .AddReferences(AspNet4xReferences(aspNetMvcVersion))
        .Verify();

    [DataRow("/Index2", false)]
    [DataRow("\\Index2", true)]
    [DataRow("Index1/SubPath", true)]
    [DataTestMethod]
    public void RouteTemplateShouldNotStartWithSlash_WithHttpAttribute(string attributeParameter, bool compliant)
    {
        var builder = builderCS.AddReferences(AspNet4xReferences("5.2.7")).AddSnippet($$"""
            using System.Web.Mvc;

            [Route("[controller]")]
            public class BasicsController : Controller {{(compliant ? string.Empty : " // Noncompliant")}}
            {
                [HttpGet]
                [Route("{{attributeParameter}}")] {{(compliant ? string.Empty : " // Secondary")}}
                public ActionResult SomeAction() => View();
            }
            """);

        if (compliant)
        {
            builder.VerifyNoIssueReported();
        }
        else
        {
            builder.Verify();
        }
    }

    [DataRow("""[Route(template: @"/[action]", Name = "a", Order = 42)]""", false)]
    [DataRow("""[Route(template: @"[action]", Name = "/a", Order = 42)]""", true)]
    [DataRow("""[RouteAttribute(@"/[action]")]""", false)]
    [DataRow("""[RouteAttribute(@"/[action]")]""", false)]
    [DataRow("""[System.Web.Mvc.RouteAttribute(@"/[action]")]""", false)]
    [DataRow("""[method:Route(@"/[action]")]""", false)]
    [DataTestMethod]
    public void RouteTemplateShouldNotStartWithSlash_WithAttributeSyntaxVariations(string attribute, bool compliant) =>
        builderCS.AddReferences(AspNet4xReferences("5.2.7"))
            .WithOptions(ParseOptionsHelper.FromCSharp11)
            .AddSnippet($$"""
                using System.Web.Mvc;

                [Route("[controller]")]
                public class BasicsController : Controller {{(compliant ? string.Empty : " // Noncompliant")}}
                {
                    {{attribute}} {{(compliant ? string.Empty : " // Secondary")}}
                    public ActionResult SomeAction() => View();
                }
                """)
            .Verify();

    [DataRow("""(@"/[action]")""", false)]
    [DataRow("""("/[action]")""", false)]
    [DataRow("""("\u002f[action]")""", false)]
    [DataRow("""($"/{ConstA}/[action]")""", false)]
    [DataRow(""""("""/[action]""")"""", false)]
    [DataRow(""""""(""""/[action]"""")"""""", false)]
    [DataRow(""""($$"""/{{ConstA}}/[action]""")"""", false)]
    [DataRow("""(@"/[action]", Name = "a", Order = 42)""", false)]
    [DataRow("""($"{ConstA}/[action]")""", true)]
    [DataRow("""($"{ConstSlash}[action]")""", false)]
    [DataTestMethod]
    public void RouteTemplateShouldNotStartWithSlash_WithAllTypesOfStrings(string attributeParameter, bool compliant)
    {
        var builder = builderCS
            .AddReferences(AspNet4xReferences("5.2.7"))
            .WithOptions(ParseOptionsHelper.FromCSharp11)
            .AddSnippet($$"""
                using System.Web.Mvc;

                [Route("[controller]")]
                public class BasicsController : Controller {{(compliant ? string.Empty : " // Noncompliant")}}
                {
                    private const string ConstA = "A";
                    private const string ConstSlash = "/";

                    [Route{{attributeParameter}}] {{(compliant ? string.Empty : " // Secondary")}}
                    public ActionResult SomeAction() => View();
                }
                """);

        if (compliant)
        {
            builder.VerifyNoIssueReported();
        }
        else
        {
            builder.Verify();
        }
    }

    [TestMethod]
    [DynamicData(nameof(AspNet4xMvcVersionsUnderTest))]
    public void RouteTemplateShouldNotStartWithSlash_DoesNotReportInAutoGeneratedCode_VB(string aspNetMvcVersion) =>
    builderVB
    .AddSnippet("""
            ' <auto-generated/>
            Imports System.Web.Mvc

            <Route("[controller]")>
            Public Class NoncompliantController ' Compliant it's in an autogenerated file
                Inherits Controller

                <Route("/Index1")>
                Public Function Index1() As ActionResult
                    Return View()
                End Function

            End Class
            """)
    .AddReferences(AspNet4xReferences(aspNetMvcVersion))
    .Verify();

#endif

}
