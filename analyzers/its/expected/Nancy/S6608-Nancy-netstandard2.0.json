{
"issues":  [
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Conventions/BuiltInAcceptHeaderCoercions.cs#L84",
"region":  {
"startLine":  84,
"startColumn":  36,
"endLine":  84,
"endColumn":  41
}
}
},
{
"id":  "S6608",
"message":  "Indexing at Count-1 should be used instead of the "Enumerable" extension method "Last"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Diagnostics/Modules/InfoModule.cs#L91",
"region":  {
"startLine":  91,
"startColumn":  66,
"endLine":  91,
"endColumn":  70
}
}
},
{
"id":  "S6608",
"message":  "Indexing at Count-1 should be used instead of the "Enumerable" extension method "Last"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Diagnostics/Modules/InfoModule.cs#L103",
"region":  {
"startLine":  103,
"startColumn":  66,
"endLine":  103,
"endColumn":  70
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Diagnostics/Modules/SettingsModule.cs#L75",
"region":  {
"startLine":  75,
"startColumn":  68,
"endLine":  75,
"endColumn":  73
}
}
},
{
"id":  "S6608",
"message":  "Indexing at Count-1 should be used instead of the "Enumerable" extension method "Last"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/HttpMultipartBoundary.cs#L76",
"region":  {
"startLine":  76,
"startColumn":  68,
"endLine":  76,
"endColumn":  72
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Json/Converters/TupleConverter.cs#L42",
"region":  {
"startLine":  42,
"startColumn":  47,
"endLine":  42,
"endColumn":  52
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Localization/ResourceBasedTextResource.cs#L75",
"region":  {
"startLine":  75,
"startColumn":  32,
"endLine":  75,
"endColumn":  37
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/ModelBinding/DefaultConverters/CollectionConverter.cs#L66",
"region":  {
"startLine":  66,
"startColumn":  69,
"endLine":  66,
"endColumn":  74
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/ModelBinding/DefaultConverters/CollectionConverter.cs#L113",
"region":  {
"startLine":  113,
"startColumn":  69,
"endLine":  113,
"endColumn":  74
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/Routing/Trie/Nodes/TrieNode.cs#L153",
"region":  {
"startLine":  153,
"startColumn":  42,
"endLine":  153,
"endColumn":  47
}
}
},
{
"id":  "S6608",
"message":  "Indexing at 0 should be used instead of the "Enumerable" extension method "First"",
"location":  {
"uri":  "https://github.com/SonarSource/sonar-dotnet/blob/master/analyzers/its/sources/Nancy/src/Nancy/ViewEngines/DefaultViewLocator.cs#L129",
"region":  {
"startLine":  129,
"startColumn":  36,
"endLine":  129,
"endColumn":  41
}
}
}
]
}
