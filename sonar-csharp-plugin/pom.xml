<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonarsource.dotnet</groupId>
    <artifactId>sonar-csharp</artifactId>
    <version>6.0-SNAPSHOT</version>
  </parent>

  <artifactId>sonar-csharp-plugin</artifactId>
  <packaging>sonar-plugin</packaging>

  <name>SonarC#</name>
  <description>Code Analyzer for C#</description>
  <url>http://redirect.sonarsource.com/plugins/csharp.html</url>
  <inceptionYear>2014</inceptionYear>
  <organization>
    <name>SonarSource</name>
    <url>http://www.sonarsource.com</url>
  </organization>
  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>aleve</id>
      <name>Amaury Lev√©</name>
      <organization>SonarSource</organization>
    </developer>
    <developer>
      <id>vhristov</id>
      <name>Valeri Hristov</name>
      <organization>SonarSource</organization>
    </developer>
    <developer>
      <id>jgyerik</id>
      <name>Janos Gyerik</name>
      <organization>SonarSource</organization>
    </developer>
    <developer>
      <id>dmeneses</id>
      <name>Duarte Meneses</name>
      <organization>SonarSource</organization>
    </developer>
    <developer>
      <id>jhenry</id>
      <name>Julien Henry</name>
      <organization>SonarSource</organization>
    </developer>
  </developers>

  <properties>
    <sonar.version>5.6</sonar.version>
    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
    <sonar.pluginName>C#</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.csharp.CSharpPlugin</sonar.pluginClass>
    <sonarAnalyzer.workDirectory>${project.build.directory}/analyzer</sonarAnalyzer.workDirectory>
    <analyzer.build.conf>Release</analyzer.build.conf>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonar-dotnet-tests-library</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonar-dotnet-shared-library</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.15</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.8.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${sonarAnalyzer.workDirectory}</directory>
        <includes>
          <include>org/sonar/plugins/csharp/*.xml</include>
          <include>static/version.txt</include>
          <include>static/SonarAnalyzer-${project.version}.zip</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-plugin-size</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <rules>
                <requireFilesSize>
                  <maxsize>3000000</maxsize>
                  <minsize>2000000</minsize>
                  <files>
                    <file>${project.build.directory}/${project.build.finalName}.jar</file>
                  </files>
                </requireFilesSize>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>unzip-nuget</id>
            <phase>validate</phase>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <tasks>
                <copy todir="${sonarAnalyzer.workDirectory}/SonarAnalyzer.CSharp">
                  <fileset dir="${project.build.directory}/../../sonaranalyzer-dotnet/src/SonarAnalyzer.Vsix/bin/${analyzer.build.conf}/">
                    <include name="SonarAnalyzer.dll"/>
                    <include name="SonarAnalyzer.CSharp.dll"/>
                    <include name="Google.Protobuf.dll"/>
                  </fileset>
                </copy>
                <zip destfile="${sonarAnalyzer.workDirectory}/static/SonarAnalyzer-${project.version}.zip"
                     basedir="${sonarAnalyzer.workDirectory}/SonarAnalyzer.CSharp"/>

                <copy todir="${sonarAnalyzer.workDirectory}/SonarAnalyzer.RuleDocGenerator.CSharp">
                  <fileset dir="${project.build.directory}/../../sonaranalyzer-dotnet/src/SonarAnalyzer.RuleDescriptorGenerator/bin/${analyzer.build.conf}/cs">
                    <include name="rules.xml"/>
                    <include name="profile.xml"/>
                    <include name="sqale.xml"/>
                  </fileset>
                </copy>
                <!-- SQALE XML in sslr requires a resource to read from -->
                <copy todir="${sonarAnalyzer.workDirectory}/org/sonar/plugins/csharp">
                  <fileset dir="${sonarAnalyzer.workDirectory}/SonarAnalyzer.RuleDocGenerator.CSharp">
                    <include name="*.xml"/>
                  </fileset>
                </copy>

                <echo file="${sonarAnalyzer.workDirectory}/static/version.txt" message="${project.version}" encoding="utf-8" />
              </tasks>

            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>debug</id>
      <activation>
        <property>
          <name>debug</name>
        </property>
      </activation>
      <properties>
        <analyzer.build.conf>Debug</analyzer.build.conf>
      </properties>
    </profile>
  </profiles>

</project>