# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  - group: sonarsource-build-variables
  - name: solution
    value: 'sonaranalyzer-dotnet/SonarAnalyzer.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - name: NUGET_PACKAGES
    value: $(Pipeline.Workspace)/.nuget/packages
  - name: MSBUILD_PATH
    value: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe'
# MVN vars
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MAVEN_OPTS
    value: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  - name: commonMavenArguments
    value: -B -Pdeploy-sonarsource -Dmaven.test.skip=true

resources:
  repositories:
    - repository: commonTemplates
      type: git
      name: pipelines-yaml-templates
      ref:  refs/tags/v1.0.6

steps:
- task: NuGetToolInstaller@1
  displayName: "Install NuGet"

- task: Cache@2
  inputs:
    key: 'nuget | "$(Agent.OS)" | **/packages.lock.json'
    restoreKeys: |
       nuget | "$(Agent.OS)"
       nuget
    path: $(NUGET_PACKAGES)
  displayName: Cache NuGet packages

- task: NuGetCommand@2
  displayName: "Restore NuGet packages"
  inputs:
    restoreSolution: '$(solution)'

- powershell: |
   # Calculate the file path
   $versionFilePath = "$env:BUILD_SOURCESDIRECTORY\scripts\version\Version.props"
   Write-Host "Reading the Sonar project version from '${versionFilePath}' ..."

   # Read the version from the file
   [xml]$versionProps = Get-Content "$versionFilePath"
   $sonarProjectVersion = $versionProps.Project.PropertyGroup.MainVersion
   Write-Host "Sonar project version is '${sonarProjectVersion}'"

   # Set the variable to it can be used by other tasks
   Write-Host "##vso[task.setvariable variable=SONAR_PROJECT_VERSION;]$sonarProjectVersion"
  displayName: 'Read Sonar project version from the versions.props file'

- task: VSBuild@1
  displayName: 'Set BranchName, Sha1 and BuildNumber properties from Azure pipeline variables'
  inputs:
    solution: scripts/version/ChangeVersion.proj
    msbuildArgs: '/p:Sha1=$(Build.SourceVersion) /p:BranchName=$(Build.SourceBranchName) /p:BuildNumber=$(Build.BuildId) /p:BuildConfiguration=$(BuildConfiguration)'

- task: DownloadSecureFile@1
  displayName: 'Download snk file'
  name: snk
  inputs:
    secureFile: SonarSourceSecret.snk

- task: DownloadSecureFile@1
  displayName: 'Download pfx file'
  inputs:
    secureFile: 'sonarsource-2019-2021.pfx'

- task: VSBuild@1
  displayName: "Build SonarAnalyzer"
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:DeployExtension=false /p:SignAssembly=true /p:DefineConstants=SignAssembly /p:AssemblyOriginatorKeyFile="$(snk.secureFilePath)" /p:pfxCertificatePath="$(pfx.secureFilePath)" /p:pfxPassword="$(pfxPassword)" /p:pfxSha1=$(pfxSha1) /p:Sha1=$(Build.SourceVersion) /p:BuildNumber=$(Build.BuildId)  '

######### MVN stuff ########

- task: Cache@2
  displayName: "Cache Maven local repo"
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)

- task: DownloadSecureFile@1
  displayName: 'Download Maven settings'
  name: mavenSettings
  inputs:
    secureFile: 'maven-settings.xml'

- template: update-maven-version-steps.yml@commonTemplates
  parameters:
    mavenSettingsFilePath: $(mavenSettings.secureFilePath)

- task: Maven@3
  displayName: 'Run Maven deploy'
  env:
    ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
    ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
  inputs:
    goals: 'deploy'
    options: >-
      $(commonMavenArguments)
      --settings $(mavenSettings.secureFilePath)
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenOptions: $(MAVEN_OPTS)

- task: SonarCloudPrepare@1
  condition: false
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'sonarsource'
    scannerMode: 'Other'

# running SonarCloud analysis can be done in parallel with ITs
- task: Maven@3
  condition: false
  displayName: 'Run Maven verify, UTs with SonarCloud'
  inputs:
    goals: 'verify'
    options: -B --settings $(mavenSettings.secureFilePath) -Pcoverage
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'UTs on Windows'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenOptions: $(MAVEN_OPTS)
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarCloudPublish@1
  condition: false
  inputs:
    pollingTimeoutSec: '300'

- task: Maven@3
  displayName: 'Run MVN ITs'
  inputs:
    mavenPomFile: its/pom.xml
    goals: 'clean verify'
    options: -B --settings $(mavenSettings.secureFilePath)
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'ITs on Windows'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenOptions: $(MAVEN_OPTS)

- bash: git checkout .
  name: revertPomChanges
  displayName: Revert changes made to pom.xml to not break cache feature

######### END MVN stuff ########
