# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'sonaranalyzer-dotnet/SonarAnalyzer.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

steps:
- task: NuGetToolInstaller@1
  displayName: "Install nuget"

- task: Cache@2
  inputs:
    key: 'nuget | "$(Agent.OS)" | **/packages.lock.json'
    restoreKeys: |
       nuget | "$(Agent.OS)"
       nuget
    path: $(NUGET_PACKAGES)
  displayName: Cache NuGet packages

- task: NuGetCommand@2
  displayName: "Restore nuget packages"
  inputs:
    restoreSolution: '$(solution)'

- powershell: |
   # Calculate the file path
   $versionFilePath = "$env:BUILD_SOURCESDIRECTORY\scripts\version\Version.props"
   Write-Host "Reading the Sonar project version from '${versionFilePath}' ..."

   # Read the version from the file
   [xml]$versionProps = Get-Content "$versionFilePath"
   $sonarProjectVersion = $versionProps.Project.PropertyGroup.MainVersion
   Write-Host "Sonar project version is '${sonarProjectVersion}'"

   # Set the variable to it can be used by other tasks
   Write-Host "##vso[task.setvariable variable=SONAR_PROJECT_VERSION;]$sonarProjectVersion"
  displayName: 'Read Sonar project version from the versions.props file'

- task: DownloadSecureFile@1
  displayName: 'Download snk file'
  name: snk
  inputs:
    secureFile: SonarSourceSecret.snk

- task: DownloadSecureFile@1
  displayName: 'Download pfx file'
  inputs:
    secureFile: 'sonarsource-2019-2021.pfx'

- task: SonarCloudPrepare@1
  displayName: 'Run Code Analysis - Begin Step'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'sonarsource'
    scannerMode: 'MSBuild'
    projectKey: 'sonaranalyzer-dotnet'
    projectName: 'SonarAnalyzer .Net'
    projectVersion: '$(SONAR_PROJECT_VERSION)'
    extraProperties: 

- task: VSBuild@1
  displayName: "Build SonarAnalyzer"
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:DeployExtension=false /p:SignAssembly=true /p:DefineConstants=SignAssembly /p:AssemblyOriginatorKeyFile="$(snk.secureFilePath)" /p:pfxCertificatePath="$(pfx.secureFilePath)" /p:pfxPassword="$(pfxPassword)" /p:pfxSha1=$(pfxSha1) /p:Sha1=$(Build.SourceVersion) /p:BuildNumber=$(Build.BuildId)  '

- task: VSTest@2
  displayName: "Run SonarAnalyzer unit tests"
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\**\*.UnitTest.dll
     !**\obj\**
    runInParallel: true
    runTestsInIsolation: true
    codeCoverageEnabled: true
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    rerunFailedTests: false

- task: SonarCloudAnalyze@1
  displayName: 'Run Code Analysis - End Step'

- task: SonarCloudPublish@1
  displayName: 'Run Code Analysis - Publish QG'
  inputs:
    pollingTimeoutSec: '300'