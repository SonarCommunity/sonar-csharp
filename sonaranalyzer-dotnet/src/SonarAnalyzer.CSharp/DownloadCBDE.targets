<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Targets to download the CBDE binaries if required. 
  
       The files will be downloaded automatically if they are not found locally.
       
       To force the files to be downloaded even if they exist, set the build property "UpdateCBDE" to true.
  
  -->
  
    <ItemGroup>
    <CBDEUrls Include="http://repox.jfrog.io/repox/sonarsource-public-builds/org/sonarsource/cbde/windows/cbde-windows.zip" >
      <SubFolder>windows\</SubFolder>
      <MainExe>dotnet-symbolic-execution.exe</MainExe>
      <ZipFileName>cbde-windows.zip</ZipFileName>
    </CBDEUrls>
    <CBDEUrls Include="http://repox.jfrog.io/repox/sonarsource-public-builds/org/sonarsource/cbde/linux/cbde-linux.zip" >
      <SubFolder>linux\</SubFolder>
      <MainExe>dotnet-symbolic-execution</MainExe>
      <ZipFileName>cbde-linux.zip</ZipFileName>
    </CBDEUrls>
  </ItemGroup>

  <PropertyGroup>
    <CBDEDownloadUrl>http://repox.jfrog.io/repox/sonarsource-public-builds/org/sonarsource/cbde/windows/cbde-windows.zip</CBDEDownloadUrl>
    <RelativeCBDEFolder>CBDE\</RelativeCBDEFolder>
    <CBDEFolder>$(MSBuildProjectDirectory)\$(RelativeCBDEFolder)</CBDEFolder>
   </PropertyGroup>

  <!-- Specify them here in case they are already present. If they are not, they will be added by the task that fetches the files -->
  <!-- This is a duplication of the "Content" items defined inside the target FetchCBDEBinaries, and we should try to remove it.
       However, if we simply remove it, when running unit tests from the IDE while SonarAnalyzer.CSharp is already up-to-date
       these files are missing. Duplication the item definition here avoid this situation
       -->
  <ItemGroup>
    <Content Include="$(RelativeCBDEFolder)\windows\**\*.exe" >
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(RelativeCBDEFolder)\windows\**\*.txt" >
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(RelativeCBDEFolder)\linux\**" Exclude="$(RelativeCBDEFolder)\linux\**\*.zip">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  


  <Target Name="FetchCBDEBinaries" BeforeTargets="BeforeBuild" Outputs="%(CBDEUrls.SubFolder)/%(CBDEUrls.MainExe)">
    <PropertyGroup>
      <PowerShellExe Condition="'$(PowerShellExe)'==''">%WINDIR%\System32\WindowsPowerShell\v1.0\powershell.exe</PowerShellExe>
      <UnzipScript>$(MSBuildProjectDirectory)\..\..\..\Scripts\unzip.ps1</UnzipScript>
      <DownloadScript>$(MSBuildProjectDirectory)\..\..\..\Scripts\download.ps1</DownloadScript>
    </PropertyGroup>
    
    <PropertyGroup>
      <CBDECurrentFolder>$(CBDEFolder)%(CBDEUrls.SubFolder)</CBDECurrentFolder>
      <CBDEFilesExist>$([System.IO.File]::Exists('$(CBDECurrentFolder)%(CBDEUrls.MainExe)'))</CBDEFilesExist>
      <ShouldDownloadCBDE>$(UpdateCBDE)</ShouldDownloadCBDE>
      <ShouldDownloadCBDE Condition="$(ShouldDownloadCBDE)=='' AND $(CBDEFilesExist)=='false'">true</ShouldDownloadCBDE>
    </PropertyGroup>

    <Message Importance="high" Text="%(CBDEUrls.SubFolder)%(CBDEUrls.MainExe): binaries exist? $(CBDEFilesExist)" />
    <Message Importance="high" Text="%(CBDEUrls.SubFolder)%(CBDEUrls.MainExe): Updating CBDE binaries" Condition="$(UpdateCBDE)=='true'" />
    <Message Importance="high" Text="CBDE: Deleting any existing files..." Condition="$(ShouldDownloadCBDE)=='true'"/>

    <ItemGroup>
      <ExistingCBDEFiles Include="$(CBDECurrentFolder)\*.*" />
    </ItemGroup>
    <Delete Files="@(ExistingCBDEFiles)" Condition="$(ShouldDownloadCBDE)=='true'"/>

    <Message Importance="high" Text="CBDE: Begin downloading CBDE zip..." Condition="$(ShouldDownloadCBDE)=='true'"/>
    <Exec ConsoleToMsBuild="true" Condition="$(ShouldDownloadCBDE)=='true'"
      Command="$(PowerShellExe) -NonInteractive -ExecutionPolicy Unrestricted -File $(DownloadScript) -url @(CBDEUrls) -outfolder $(CBDECurrentFolder) -outfile %(CBDEUrls.ZipFileName)">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec"/>
    </Exec>
    <Message Importance="low" Text="Output of powershell download: $(OutputOfExec)"  Condition="$(ShouldDownloadCBDE)=='true'"/>
    <Message Importance="high" Text="CBDE: Finished downloading CBDE binaries: $(CBDEZipFilePath)"  Condition="$(ShouldDownloadCBDE)=='true'"/>

    <Message Importance="high" Text="CBDE: Unzipping the CBDE binaries..."  Condition="$(ShouldDownloadCBDE)=='true'"/>
    <Exec ConsoleToMsBuild="true" Condition="$(ShouldDownloadCBDE)=='true'"
      Command="$(PowerShellExe) -NonInteractive -ExecutionPolicy Unrestricted -File $(UnzipScript) -zipfile $(CBDECurrentFolder)%(CBDEUrls.ZipFileName) -outpath $(CBDECurrentFolder)">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
    <Message Importance="low" Text="Output of powershell unzip: $(OutputOfExec)" Condition="$(ShouldDownloadCBDE)=='true'"/>

    <Message Importance="high" Text="CBDE: Finished unzipping CBDE binaries" Condition="$(ShouldDownloadCBDE)=='true'"/>

    <!-- Specifies the CBDE files that should be included in the project and copied to the output directory -->
    <ItemGroup>
      <Content Include="$(RelativeCBDEFolder)\windows\**\*.exe" >
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <Content Include="$(RelativeCBDEFolder)\windows\**\*.txt" >
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <Content Include="$(RelativeCBDEFolder)\linux\**" Exclude="$(RelativeCBDEFolder)\linux\**\*.zip">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>

</Project>