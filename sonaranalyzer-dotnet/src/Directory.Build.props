<Project>

  <!-- Include the parent Directory.Build.props file, if there is one. -->
  <PropertyGroup>
    <!-- Search up the tree, starting at the folder above the one containing this file -->
    <SearchRootDirectory>$([System.IO.Directory]::GetParent($(MSBuildThisFileDirectory)))</SearchRootDirectory>
    <SearchRootDirectory>$([System.IO.Directory]::GetParent($(SearchRootDirectory)))</SearchRootDirectory>
    <ParentDirectoryBuildProps>$([MSBuild]::GetDirectoryNameOfFileAbove($(SearchRootDirectory), Directory.Build.props))\Directory.Build.props</ParentDirectoryBuildProps>
  </PropertyGroup>
  <Import Project="$(ParentDirectoryBuildProps)" Condition="$(ParentDirectoryBuildProps)!=''" />

  <PropertyGroup>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
  </PropertyGroup>
  <ItemGroup Condition="'$(Rspec2Resx)' != ''">
    <RSpecFiles Include="$(ProjectDir)..\..\rspec\$(Rspec2Resx)\*.html"/>
    <RSpecFiles Include="$(ProjectDir)..\..\rspec\$(Rspec2Resx)\*.json"/>
    <!--Must be explicitely added, because we are executed after the list has already been filled by what exists in the folder -->
    <EmbeddedResource Include="RspecStrings.resx" />
  </ItemGroup>
  <Target Condition="'$(Rspec2Resx)' != ''"
          Name="GenerateResxFromRspec" 
          Inputs="@(RSpecFiles)" 
          Outputs="RspecStrings.resx" 
          BeforeTargets="BeforeBuild">
    <Message Importance="high" Text="Generating resx files" />
    <PropertyGroup>
      <PowerShellExe Condition="'$(PowerShellExe)'==''">%WINDIR%\System32\WindowsPowerShell\v1.0\powershell.exe</PowerShellExe>
    </PropertyGroup>
    <Exec Command="$(PowerShellExe) -command &quot;if ((Get-ExecutionPolicy) -ne &apos;Unrestricted&apos;) {echo &apos;Powershell: error 0000: You have to run Set-ExecutionPolicy Unrestricted (In powershell32)&apos;} &quot; " />
    <Exec ConsoleToMsBuild="true"
      Command="$(PowerShellExe) -NonInteractive -ExecutionPolicy Unrestricted -command &quot;  &amp; { ..\..\..\scripts\rspec\rspec2resx.ps1 $(Rspec2Resx)  $(ProjectDir)../../rspec/$(Rspec2Resx) $(ProjectDir)RspecStrings.resx } &quot;"/>
  </Target>

</Project>